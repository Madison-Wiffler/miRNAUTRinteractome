[
  {
    "objectID": "content/methods.html",
    "href": "content/methods.html",
    "title": "Additional Resources",
    "section": "",
    "text": "github Repository containing code and data for all the figures in the manuscript: ADD URL HERE\nYost Lab Page: http://yostlab.genetics.utah.edu/\nYandell Lab Page: https://www.yandell-lab.org/"
  },
  {
    "objectID": "content/index.html",
    "href": "content/index.html",
    "title": "Markdown basics",
    "section": "",
    "text": "WILL DELETE this – for own self learning all the quarto functions\nThis is a template repo to set up Quarto websites. The main purpose is to quickly set up repos for new websites with consistent style. It also comes with integrated github actions to render the website automatically once content is added.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "content/index.html#overview",
    "href": "content/index.html#overview",
    "title": "Markdown basics",
    "section": "Overview",
    "text": "Overview\nQuarto is based on Pandoc and uses its variation of markdown as its underlying document syntax. Pandoc markdown is an extended and slightly revised version of John Gruber’s Markdown syntax.\nMarkdown is a plain text format that is designed to be easy to write, and, even more importantly, easy to read:\n\nA Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. – John Gruber\n\nThis document provides examples of the most commonly used markdown syntax. See the full documentation of Pandoc’s Markdown for more in-depth documentation."
  },
  {
    "objectID": "content/index.html#text-formatting",
    "href": "content/index.html#text-formatting",
    "title": "Markdown basics",
    "section": "Text Formatting",
    "text": "Text Formatting\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\n*italics*, **bold**, ***bold italics***\nitalics, bold, bold italics\n\n\nsuperscript^2^ / subscript~2~\nsuperscript2 / subscript2\n\n\n~~strikethrough~~\nstrikethrough\n\n\n`verbatim code`\nverbatim code"
  },
  {
    "objectID": "content/index.html#headings",
    "href": "content/index.html#headings",
    "title": "Markdown basics",
    "section": "Headings",
    "text": "Headings\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\n# Header 1\nHeader 1\n\n\n## Header 2\nHeader 2\n\n\n### Header 3\nHeader 3\n\n\n#### Header 4\nHeader 4\n\n\n##### Header 5\nHeader 5\n\n\n###### Header 6\nHeader 6"
  },
  {
    "objectID": "content/index.html#links-images",
    "href": "content/index.html#links-images",
    "title": "Markdown basics",
    "section": "Links & Images",
    "text": "Links & Images\n&lt;https://quarto.org&gt;                                                                                                                                                 \nhttps://quarto.org\n[Quarto](https://quarto.org)                                                                                                                                         \nQuarto\n![Caption](/images/logo.png)                                                                                                                   \n\n\n\nCaption\n\n\n[![Caption](/images/logo.png)](https://quarto.org)                                                                                             \n\n\n\nCaption\n\n\n[![Caption](/images/logo.png)](https://quarto.org \" contour-lines\")                                                                               \n[Caption](/images/logo.png ” contour-lines”){fig-alt=“A line drawing of contour-lines.”}\n[![](/images/logo.png){fig-alt=\"Alt text\"}](https://quarto.org)"
  },
  {
    "objectID": "content/index.html#lists",
    "href": "content/index.html#lists",
    "title": "Markdown basics",
    "section": "Lists",
    "text": "Lists\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\n* unordered list\n    + sub-item 1\n    + sub-item 2\n        - sub-sub-item 1\n\nunordered list\n\nsub-item 1\nsub-item 2\n\nsub-sub-item 1\n\n\n\n\n\n*   item 2\n\n    Continued (indent 4 spaces)\n\nitem 2\nContinued (indent 4 spaces)\n\n\n\n1. ordered list\n2. item 2\n    i) sub-item 1\n         A.  sub-sub-item 1\n\nordered list\nitem 2\n\nsub-item 1\n\nsub-sub-item 1\n\n\n\n\n\n(@)  A list whose numbering\n\ncontinues after\n\n(@)  an interruption\n\nA list whose numbering\n\ncontinues after\n\nan interruption\n\n\n\n::: {}\n1. A list\n:::\n\n::: {}\n1. Followed by another list\n:::\n\n\nA list\n\n\n\n\nFollowed by another list\n\n\n\n\nterm\n: definition\n\nterm\n\ndefinition\n\n\n\n\n\nNote that unlike other Markdown renderers (notably Jupyter and GitHub), lists in Quarto require an entire blank line above the list. Otherwise the list will not be rendered in list form, rather it will all appear as normal text along a single line."
  },
  {
    "objectID": "content/index.html#tables",
    "href": "content/index.html#tables",
    "title": "Markdown basics",
    "section": "Tables",
    "text": "Tables\n\nMarkdown Syntax\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|   12  |  12  |    12   |    12  |\n|  123  |  123 |   123   |   123  |\n|    1  |    1 |     1   |     1  |\n\n\nOutput\n\n\n\nRight\nLeft\nDefault\nCenter\n\n\n\n\n12\n12\n12\n12\n\n\n123\n123\n123\n123\n\n\n1\n1\n1\n1\n\n\n\nLearn more in the article on Tables."
  },
  {
    "objectID": "content/index.html#source-code",
    "href": "content/index.html#source-code",
    "title": "Markdown basics",
    "section": "Source Code",
    "text": "Source Code\nUse ``` to delimit blocks of source code:\n```\ncode\n```\nAdd a language to syntax highlight code blocks:\n```python\n1 + 1\n```\nPandoc supports syntax highlighting for over 140 different languages. If your language is not supported then you can use the default language to get a similar visual treatment:\n```default\ncode\n```\nIf you are creating HTML output there is a wide variety of options available for code block output. See the article on HTML Code for additional details."
  },
  {
    "objectID": "content/index.html#equations",
    "href": "content/index.html#equations",
    "title": "Markdown basics",
    "section": "Equations",
    "text": "Equations\nUse $ delimiters for inline math and $$ delimiters for display math. For example:\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\ninline math: $E = mc^{2}$\ninline math: \\(E=mc^{2}\\)\n\n\ndisplay math:\n\n$$E = mc^{2}$$\ndisplay math:\n\\[E = mc^{2}\\]\n\n\n\nIf you want to define custom TeX macros, include them within $$ delimiters enclosed in a .hidden block. For example:\n::: {.hidden}\n$$\n \\def\\RR{{\\bf R}}\n \\def\\bold#1{{\\bf #1}}\n$$\n:::\nFor HTML math processed using MathJax (the default) you can use the \\def, \\newcommand, \\renewcommand, \\newenvironment, \\renewenvironment, and \\let commands to create your own macros and environments."
  },
  {
    "objectID": "content/index.html#diagrams",
    "href": "content/index.html#diagrams",
    "title": "Markdown basics",
    "section": "Diagrams",
    "text": "Diagrams\nQuarto has native support for embedding Mermaid and Graphviz diagrams. This enables you to create flowcharts, sequence diagrams, state diagrams, Gantt charts, and more using a plain text syntax inspired by markdown.\nFor example, here we embed a flowchart created using Mermaid:\n\n```{mermaid}\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n  C --&gt; D[Result one]\n  C --&gt; E[Result two]\n```\n\n\n\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n  C --&gt; D[Result one]\n  C --&gt; E[Result two]\n\n\n\n\n\nLearn more in the article on Diagrams."
  },
  {
    "objectID": "content/index.html#videos",
    "href": "content/index.html#videos",
    "title": "Markdown basics",
    "section": "Videos",
    "text": "Videos\nYou can include videos in documents using the {{&lt; video &gt;}} shortcode. For example, here we embed a YouTube video:\n{{&lt; video https://www.youtube.com/embed/wo9vZccmqwc &gt;}}\nVideos can refer to video files (e.g. MPEG) or can be links to videos published on YouTube, Vimeo, or Brightcove. Learn more in the article on Videos."
  },
  {
    "objectID": "content/index.html#divs-and-spans",
    "href": "content/index.html#divs-and-spans",
    "title": "Markdown basics",
    "section": "Divs and Spans",
    "text": "Divs and Spans\nYou can add classes, attributes, and other identifiers to regions of content using Divs and Spans (you’ll see an example of this below in Callout Blocks).\nFor example, here we add the “border” class to a region of content using a div (:::):\n::: {.border}\nThis content can be styled with a border\n:::\nOnce rendered to HTML, Quarto will translate the markdown into:\n&lt;div class=\"border\"&gt;\n  &lt;p&gt;This content can be styled with a border&lt;/p&gt;\n&lt;/div&gt;\nDivs start with a fence containing at least three consecutive colons plus some attributes. The attributes may optionally be followed by another string of consecutive colons. The Div ends with another line containing a string of at least three consecutive colons. The Div should be separated by blank lines from preceding and following blocks. Divs may also be nested. For example\n::::: {#special .sidebar}\n\n::: {.warning}\nHere is a warning.\n:::\n\nMore content.\n:::::\nOnce rendered to HTML, Quarto will translate the markdown into:\n&lt;div id=\"special\" class=\"sidebar\"&gt;\n  &lt;div class=\"warning\"&gt;\n    &lt;p&gt;Here is a warning.&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;p&gt;More content.&lt;/p&gt;\n&lt;/div&gt;\nFences without attributes are always closing fences. Unlike with fenced code blocks, the number of colons in the closing fence need not match the number in the opening fence. However, it can be helpful for visual clarity to use fences of different lengths to distinguish nested divs from their parents.\nA bracketed sequence of inlines, as one would use to begin a link, will be treated as a Span with attributes if it is followed immediately by attributes:\n[This is *some text*]{.class key=\"val\"}\nOnce rendered to HTML, Quarto will translate the markdown into:\n&lt;span class=\"class\" data-key=\"val\"&gt;\n  This is &lt;em&gt;some text&lt;/em&gt;\n&lt;/span&gt;\nTypically, you’ll use CSS and/or a Filter along with Divs and Spans to provide styling or other behavior within rendered documents.\n\nOrdering of Attributes\nBoth divs and spans in Pandoc can have any combination of identifiers, classes, and (potentially many) key-value attributes. In order for these to be recognized by Pandoc, they have to be provided in a specific order: identifiers, classes, and then key-value attributes. Any of these can be omitted, but must follow that order if they are provided. For example, the following is valid:\n[This is good]{#id .class key1=\"val1\" key2=\"val2\"}\nHowever, the following will not be recognized by Pandoc:\n[This does *not* work!]{.class key=\"val\" #id}\nThis ordering restriction applies to both divs and spans. See Pandoc’s documentation on Divs and Spans for additional details."
  },
  {
    "objectID": "content/index.html#callout-blocks",
    "href": "content/index.html#callout-blocks",
    "title": "Markdown basics",
    "section": "Callout Blocks",
    "text": "Callout Blocks\n\nMarkdown Syntax\n:::{.callout-note}\nNote that there are five types of callouts, including: \n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n\n\nOutput\n\n\n\n\n\n\nNote\n\n\n\nNote that there are five types of callouts, including note, tip, warning, caution, and important.\n\n\n\n\n\n\n\n\nTip\n\n\n\nNote that there are five types of callouts, including note, tip, warning, caution, and important.\n\n\n\n\n\n\n\n\nWarning\n\n\n\nNote that there are five types of callouts, including note, tip, warning, caution, and important.\n\n\n\n\n\n\n\n\nCaution\n\n\n\nNote that there are five types of callouts, including note, tip, warning, caution, and important.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nNote that there are five types of callouts, including note, tip, warning, caution, and important.\n\n\nLearn more in the article on Callout Blocks."
  },
  {
    "objectID": "content/index.html#other-blocks",
    "href": "content/index.html#other-blocks",
    "title": "Markdown basics",
    "section": "Other Blocks",
    "text": "Other Blocks\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\n&gt; Blockquote\n\nBlockquote\n\n\n\n::: {.classname}\nDiv\n:::\n\nDiv\n\n\n\n| Line Block\n|   Spaces and newlines\n|   are preserved\nLine Block\n   Spaces and newlines\n   are preserved"
  },
  {
    "objectID": "content/index.html#special-characters",
    "href": "content/index.html#special-characters",
    "title": "Markdown basics",
    "section": "Special Characters",
    "text": "Special Characters\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\nendash: --\nendash: –\n\n\nemdash: ---\nemdash: —"
  },
  {
    "objectID": "content/j_browser.html",
    "href": "content/j_browser.html",
    "title": "Transcriptome Browser",
    "section": "",
    "text": "JBrowse\n\nDescription of jBrowse: from paper — change for website purpose — publicly available genome browser where the user can investigate evidence-driven annotation based on temporal and tissue-specific developmental transcriptomes, and compare to other existing annotations from zebrafish cardiac - hrs\n\n\n\nHow to use JBrowse\n\ninclude box on the left - and describe all the options\nthen show an example of a gene tracks below\nthis gene track is an image from Carson – need to change as blurry – from Carsons poster – need to follow up on why JBrowse is down…\n\n\ncaption"
  },
  {
    "objectID": "content/subpage.html",
    "href": "content/subpage.html",
    "title": "miRNA UTR interactome",
    "section": "",
    "text": "paper name^ ABSTRACT updated below add date!\nSmall noncoding microRNAs (miRNAs) play essential roles in post-transcriptional gene regulation in development and disease, predominantly through interactions with mRNA untranslated regions (UTRs). However, the dynamic and tissue specific expression of miRNAs and target UTRs throughout development is poorly characterized. In order to understand the RNA regulatory events that drive cardiac morphogenesis, we captured a simultaneous small RNA and total RNA-seq time course in zebrafish hearts. We extracted de novo transcriptome annotation of dynamically changing UTRs, revealing over ten thousand significantly altered transcripts, with novel 5’ and 3’UTRs for approximately half of all protein coding genes, and predicted regulatory miRNA/UTR interactions during development. In addition to miRNA and mRNA transcriptome resources for studies of RNA regulatory events in cardiac development and disease, this study provides a robust bioinformatic pipeline that should facilitate discovery of posttranscriptional regulatory networks in other developmental systems.\n\n\nFigure from the paper? \nadd paper citation + link to paper\n\n\n\n\nNames\nof\nauthors\ngo\nhere"
  },
  {
    "objectID": "content/subpage.html#annotation-of-novel-dynamic-utrs-as-functional-targets-of-mirnas-during-cardiac-development",
    "href": "content/subpage.html#annotation-of-novel-dynamic-utrs-as-functional-targets-of-mirnas-during-cardiac-development",
    "title": "miRNA UTR interactome",
    "section": "",
    "text": "paper name^ ABSTRACT updated below add date!\nSmall noncoding microRNAs (miRNAs) play essential roles in post-transcriptional gene regulation in development and disease, predominantly through interactions with mRNA untranslated regions (UTRs). However, the dynamic and tissue specific expression of miRNAs and target UTRs throughout development is poorly characterized. In order to understand the RNA regulatory events that drive cardiac morphogenesis, we captured a simultaneous small RNA and total RNA-seq time course in zebrafish hearts. We extracted de novo transcriptome annotation of dynamically changing UTRs, revealing over ten thousand significantly altered transcripts, with novel 5’ and 3’UTRs for approximately half of all protein coding genes, and predicted regulatory miRNA/UTR interactions during development. In addition to miRNA and mRNA transcriptome resources for studies of RNA regulatory events in cardiac development and disease, this study provides a robust bioinformatic pipeline that should facilitate discovery of posttranscriptional regulatory networks in other developmental systems.\n\n\nFigure from the paper? \nadd paper citation + link to paper\n\n\n\n\nNames\nof\nauthors\ngo\nhere"
  },
  {
    "objectID": "content/cardiac_mirna.html",
    "href": "content/cardiac_mirna.html",
    "title": "Gene Expression Explorer",
    "section": "",
    "text": "Zebrafish Gene Expression Explorer\nDescription / short summary: We developed a Shiny web-based application in R (Chang et al., 2020) that displays temporal patterns of both miRNA and mRNA during zebrafish cardiac development. This allows users to investigate their genes of interest, derived from human CHD studies or developmental studies in other organisms. Both the small RNA dataset and the total RNA dataset are available to query rapidly and easily. Profile expression plots for individual genes are displayed on the home page (Figure Below), and heatmap visualizations are also available on a separate tab. All plots and differential expression analysis data generated by users are readily available for download and use for publication."
  },
  {
    "objectID": "content/Summary.html",
    "href": "content/Summary.html",
    "title": "Paper intro page",
    "section": "",
    "text": "Overview of paper\nGoal of paper\nMethods to achieve goal\n!\n!\nneed to describe ^ image somewhere + methods/ filtering information"
  },
  {
    "objectID": "content/j_browser.html#why-this-data-set-is-important",
    "href": "content/j_browser.html#why-this-data-set-is-important",
    "title": "J browser",
    "section": "##### Why this data set is important",
    "text": "##### Why this data set is important\ntalk about novel utr (fig 5 from paper)\n\n\ncaption"
  },
  {
    "objectID": "content/j_browser.html#how-to-use-j-browser",
    "href": "content/j_browser.html#how-to-use-j-browser",
    "title": "J browser",
    "section": "##### How to use J browser",
    "text": "##### How to use J browser\ninclude box on the left - and describe all the options\nthen show an example of a gene tracks below\n\n\ncaption"
  },
  {
    "objectID": "content/cardiac_mirna.html#how-to-use-shiny-app",
    "href": "content/cardiac_mirna.html#how-to-use-shiny-app",
    "title": "Zebrafish Heart Gene Expression Explorer",
    "section": "### How to use Shiny app",
    "text": "### How to use Shiny app\n\n1. Option to visualize total RNA Visualization and total miRNA Visualization and about this datatset tabs\n\n\n\ninsert caption\n\n\n\n\n2. Select RNA or miRNA Visualization tab - For example selected RNA Visualization\n\n\n3. Input gene names on the left table\n\nHave the option to change gene expression units (Normalized count or R log value or transcripts per million - explain these units?)\n\n\n\n4. see table / need to describe\n\n\n\ninsert caption\n\n\n\n\nwhy this data is important\n\ninclude example to miRNA + mRNA expression ? in content of RNA reg. map (img6 in paper)\n\n\n\ninsert caption\n\n\n\n\nisomer results\n\ncan add isomer results somewhere - this seems like not the place"
  },
  {
    "objectID": "content/cardiac_mirna.html#novel-results",
    "href": "content/cardiac_mirna.html#novel-results",
    "title": "Zebrafish Heart Gene Expression Explorer",
    "section": "### novel results",
    "text": "### novel results\nhighly expressed miRNAs? how this corresponds to other cardiac miRNA research"
  },
  {
    "objectID": "content/subpage.html#authors",
    "href": "content/subpage.html#authors",
    "title": "Cardiac miRNA & UTRs",
    "section": "Authors",
    "text": "Authors\nNames\nof\nauthors\ngo\nhere"
  },
  {
    "objectID": "content/j_browser.html#how-to-use-jbrowse",
    "href": "content/j_browser.html#how-to-use-jbrowse",
    "title": "Transcriptome Browser",
    "section": "How to use JBrowse",
    "text": "How to use JBrowse\ninclude box on the left - and describe all the options\nthen show an example of a gene tracks below\n\n\ncaption\n\n\n\n\nDo we want to include figure like this\n\n\nfigure 5A + 5G"
  }
]